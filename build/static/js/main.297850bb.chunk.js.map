{"version":3,"sources":["Components/Header/index.js","Components/Hero/index.js","Components/form/index.js","Helper.js","Components/Spinner/index.js","Components/Summary/index.js","Components/Result/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","title","className","class","href","icon","faFacebookF","faTwitter","faInstagram","faPhoneAlt","type","placeholder","aria-label","Hero","slogan","off","Form","saveSummary","saveLoading","useState","brand","year","plan","data","saveData","error","saveError","getData","e","target","name","value","onSubmit","preventDefault","trim","result","difference","Date","getFullYear","getDifferenceYear","console","log","increase","calculateBrand","increasePlan","getPlan","parseFloat","toFixed","setTimeout","quotation","htmlFor","onChange","id","checked","role","Spinner","Summary","Result","App","summary","loading","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.297850bb.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFacebookF } from '@fortawesome/free-brands-svg-icons'\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\r\nimport { faInstagram } from '@fortawesome/free-brands-svg-icons'\r\nimport { faPhoneAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport './Style.scss'\r\n\r\nconst Header = ({ title }) => {\r\n    return (\r\n        <nav className=\"navbar navbar-light\">\r\n          <a class=\"navbar-brand\" href=\"#\"><h2 className=\"header-title\"> {title} </h2></a>\r\n          <a className=\"navbar-brand\" href=\"#\"><FontAwesomeIcon icon={ faFacebookF } /></a>\r\n          <a className=\"navbar-brand\" href=\"#\"><FontAwesomeIcon icon={ faTwitter } /></a>\r\n          <a className=\"navbar-brand\" href=\"#\"><FontAwesomeIcon icon={ faInstagram } /></a>\r\n          <a className=\"navbar-brand\" href=\"#\"><FontAwesomeIcon icon={ faPhoneAlt } /></a>\r\n          <form className=\"form-inline my-2 my-lg-0\">\r\n            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n          </form>\r\n        </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.css'\r\nimport './Style.scss'\r\n\r\nconst Hero = ({ title, slogan, off }) => {\r\n    return (\r\n        <>\r\n        <div className=\"hero-wrapper\">\r\n            <div className=\"hero-text\">\r\n                <h1 className=\"hero-title\"> { title } </h1>\r\n                <div className=\"hr\"></div>\r\n                <h3 className=\"\"> { slogan } </h3>\r\n            </div>\r\n            <h2 className=\"off\"> { off }</h2>\r\n        </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Hero","import React, { useState } from 'react'\r\nimport { calculateBrand, getDifferenceYear, getPlan } from '../../Helper'\r\nimport './Style.scss'\r\n\r\nconst Form = ({ saveSummary, saveLoading }) => {\r\n\r\n    const [ data, saveData ] = useState({\r\n        brand: '',\r\n        year: '',\r\n        plan: ''\r\n    });\r\n\r\n    const [ error, saveError ] = useState(false);\r\n\r\n    //extracci칩n de valores del State\r\n    const { brand, year, plan } = data;\r\n\r\n    //lectura de datos del form para colocarlos en el State\r\n    const getData = e => {\r\n        saveData({\r\n            ...data,\r\n            [e.target.name] : e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    //submit\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(brand.trim() === '' || year.trim() === '' || plan.trim() === '') { \r\n            saveError(true);\r\n        return;\r\n        }\r\n\r\n     saveError(false);\r\n\r\n     let result = 2000;\r\n\r\n     //obtenci칩n de diferencia de a침os\r\n     const difference = getDifferenceYear(year);\r\n\r\n     //resta 3% por cada a침o\r\n     result -= ((difference * 3) * result) / 100;\r\n     console.log('la resta del 3% es' + result);\r\n     //incremento volkswagen\r\n     //incremento ford\r\n     //incremento renault\r\n     //incremento chevrolet\r\n     //incremento peugeot\r\n     //incremento fiat\r\n     result = calculateBrand(brand) * result;\r\n\r\n     //terceros completo aumenta 30%\r\n     //todo riesgo aumenta 50%\r\n     const increasePlan = getPlan(plan);\r\n     result = parseFloat( increasePlan * result).toFixed(2);\r\n\r\n     saveLoading(true)\r\n\r\n     setTimeout(() => {\r\n        //ellimina el spinner\r\n        saveLoading(false)\r\n\r\n        //carga los datos\r\n        saveSummary({\r\n            quotation: result,\r\n             data\r\n         })\r\n\r\n     }, 3000)\r\n     //total\r\n     \r\n    }\r\n\r\n    return (\r\n        <div className=\"form-wrapper\">\r\n            <form\r\n            className=\"input-group mb-3\"\r\n                onSubmit={ handleSubmit }\r\n            >\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Marca</label>\r\n                    </div>\r\n                    <select \r\n                        name='brand'\r\n                        value={ brand }\r\n                        onChange={ getData }\r\n                        className=\"custom-select\" id=\"inputGroupSelect01\"\r\n                    >\r\n                        <option value=\"\">---Seleccione---</option>\r\n                        <option value=\"volkswagen\">VOLKSWAGEN</option>\r\n                        <option value=\"ford\">FORD</option>\r\n                        <option value=\"chevrolet\">CHEVROLET</option>\r\n                        <option value=\"peugeot\">PEUGEOT</option>\r\n                        <option value=\"renault\">RENAULT</option>\r\n                        <option value=\"fiat\">FIAT</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">A침o</label>\r\n                    </div>\r\n                    <select\r\n                        name='year'\r\n                        value={ year }\r\n                        onChange={ getData }\r\n                        className=\"custom-select\" id=\"inputGroupSelect01\"\r\n                    >\r\n                        <option value=\"\">---Seleccione---</option>\r\n                        <option value=\"2020\">2020</option>\r\n                        <option value=\"2019\">2019</option>\r\n                        <option value=\"2018\">2018</option>\r\n                        <option value=\"2017\">2017</option>\r\n                        <option value=\"2016\">2016</option>\r\n                        <option value=\"2015\">2015</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"plan-wrapper\">\r\n                    <label>\r\n                    <div className=\"blog-card\">\r\n                        <div className=\"meta\">\r\n                            <div className=\"photo one\"></div>\r\n                            <ul className=\"details\">\r\n                                <li className=\"tags\"></li>\r\n                                <span class=\"badge badge-primary\"></span>\r\n                                <span class=\"badge badge-light\"></span>\r\n                                <h6> <span class=\"badge badge-secondary\"></span></h6>\r\n                            </ul>\r\n                        </div>\r\n                        \r\n                        <div className=\"description\">\r\n                            <h1>Terceros FULL completo</h1>\r\n                            <h2>FULL Potenciado</h2>\r\n                                <input \r\n                                    className=\"text-center\"\r\n                                    type=\"radio\"\r\n                                    name=\"plan\"\r\n                                    value=\"terceros completo\"\r\n                                    checked={ plan === 'terceros completo' }\r\n                                    onChange={ getData }\r\n                                /> \r\n                        </div>\r\n                    </div>\r\n                    </label>\r\n\r\n                    <label>\r\n                    <div className=\"blog-card alt\">\r\n                        <div className=\"meta\">\r\n                            <div className=\"photo two\"></div>\r\n                            <ul className=\"details\">\r\n                                <li className=\"tags\"></li>\r\n                                <li className=\"tags\"></li>\r\n                                <li className=\"tags\"></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            <h1>GARANTIZADO TODO RIESGO</h1>\r\n                            <h2>Franquicia fija</h2>\r\n                                <input \r\n                                className=\"text-center\"\r\n                                type=\"radio\"\r\n                                name=\"plan\"\r\n                                value=\"todo riesgo\"\r\n                                checked={ plan === 'todo riesgo' }\r\n                                onChange={ getData }\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                    </label>\r\n                </div>\r\n\r\n                { error ? <div className=\"alert alert-danger  btn-block text-center\" role=\"alert\">Todos los campos son obligatorios</div> : null }\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">Cotizar</button>\r\n            </form>\r\n        </div>\r\n        \r\n    );\r\n\r\n}\r\n\r\nexport default Form","//diferencia de a침os\r\nexport function getDifferenceYear (year) {\r\n\r\n    return new Date().getFullYear() - year;\r\n\r\n}\r\n\r\n//calculo del total seg칰n la marca\r\nexport function calculateBrand (brand) {\r\n    let increase;\r\n\r\n    switch(brand) {\r\n        case 'volkswagen':\r\n            increase = 1.35;\r\n            break;\r\n        case 'ford':\r\n            increase = 1.30;\r\n            break;\r\n        case 'chevrolet':\r\n            increase = 1.25;\r\n            break;\r\n        case 'peugeot':\r\n            increase = 1.20;\r\n            break;            \r\n        case 'renault':\r\n            increase = 1.15;\r\n            break;\r\n        case 'fiat':\r\n            increase = 1.10;\r\n            break;\r\n\r\n        default:\r\n            break;\r\n\r\n    }\r\n\r\n    return increase;\r\n\r\n}\r\n\r\n//calculo para el tipo de seguro\r\nexport function getPlan(plan) {\r\n    return (plan === 'terceros completo') ? 1.20 : 1.50;\r\n\r\n}","import React from 'react'\r\nimport './Style.scss'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner-container\">\r\n            <div className=\"spinner-border text-primary spinner-center\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Spinner","import React from 'react';\r\nimport './Style.scss';\r\n\r\nconst Summary = ({ data }) => {\r\n\r\n    const { brand, year, plan } = data;\r\n    if ( brand === '' || year === '' || plan === '' ) return null;\r\n    \r\n  return (\r\n      <div className=\"summary-wrapper\">\r\n        <ul class=\"list-group\">\r\n          <li class=\"list-group-item\">Marca: { brand } </li>\r\n          <li class=\"list-group-item\">A침o: { year }</li>\r\n          <li class=\"list-group-item\">plan: { plan }</li>\r\n        </ul>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Summary;\r\n","import React from 'react';\r\nimport './Style.scss';\r\n\r\nconst Result = ({ quotation }) => {\r\n\r\n  return (\r\n\r\n      (quotation === 0) \r\n        ? <div className=\"alert alert-primary text-center quotation-wrapper\" role=\"alert\">\r\n        Ingresa tu marca, modelo y seleccion치 tu plan\r\n      </div>\r\n        : (\r\n            <div className=\"text-center quotation-wrapper\">\r\n                        <div className=\"jumbotron\">\r\n                            <h1 className=\"display-4\">Precio final </h1>\r\n                            <p className=\"lead\">$ { quotation } </p>\r\n                            <hr className=\"my-4\"></hr>\r\n                            <p> Contrata tu Seguro Automotriz Online y despreoc칰pate. <br></br>\r\n                            Cont치 con nuestro respaldo y experiencia. </p>\r\n                        </div>\r\n            </div> \r\n        )\r\n  );\r\n}\r\n\r\nexport default Result;","import React, { useState } from 'react';\nimport Header from './Components/Header'\nimport Hero from './Components/Hero'\nimport Form from './Components/form'\nimport Spinner from './Components/Spinner'\nimport Summary from './Components/Summary'\nimport Result from './Components/Result'\n\nimport './App.scss';\n\nfunction App() {\n\n  const [ summary , saveSummary ] = useState({\n    quotation: 0,\n    data: {\n      brand: '',\n      year: '',\n      plan: ''\n    }\n  });\n\n  const [ loading, saveLoading ] = useState(false)\n\n  //extracci칩n de datos\n  const { data, quotation } = summary\n\n  return (\n    <>\n      <Header title='Seguro Online'/>\n      <Hero title='El mejor seguro est치 ac치' slogan='No busques m치s, disfrut치 nuestro plan m치s vendido' off='20% off por 3 meses.' />\n      <div className=\"app-wrapper\">\n        <Form saveSummary={ saveSummary } saveLoading={ saveLoading }/>\n        { loading ? <Spinner /> : null }\n        <Result quotation={ quotation }/>\n        <Summary data={ data }/> \n      </div>\n      \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}